package ui;

import classes.admin;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.sql.Connection;

import utils.loginUtil;
import utils.dbUtil;
import ui.contacts.*;

public class login {
    private JPanel panel1;
    private JPasswordField passwdTextField;
    private JTextField userTextField;
    private JButton loginBtn;
    private JPanel logPanel;
    private JLabel usernameLbl;
    private JLabel passwdLbl;
    private JLabel statusLbl;
    private JPanel mai;
    Connection con = null;


    public static void main() {
        login nl = new login();
    }


    public login() {
        JFrame frame = new JFrame("QG通讯录 登录");
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);
        frame.pack();
        frame.setVisible(true);
        dbUtil dbUtil = new dbUtil();

        loginUtil toLogin = new loginUtil();

        loginBtn.addMouseMotionListener(new MouseMotionAdapter() {
        });
        loginBtn.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                String passwd = new String(passwdTextField.getPassword());
                admin user = new admin();
                user.setUsername(userTextField.getText());
                user.setPassword(passwd);

                if (user.getPassword().isEmpty() || user.getUsername().isEmpty()) {
                    statusLbl.setText("请填写用戶名和密码");
                } else {
                    try {
                        con = dbUtil.getConnection();
                        if (toLogin.login(con, user)) {
                            new contacts(user);
                            frame.dispose();
                        } else {
                            statusLbl.setText("用户名或密码错误");
                        }
                    } catch (Exception ee) {
                        ee.printStackTrace();
                    }
                }
            }
        });

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setEnabled(true);
        panel1.setFocusTraversalPolicyProvider(false);
        panel1.setInheritsPopupMenu(false);
        panel1.setMaximumSize(new Dimension(384, 256));
        panel1.setMinimumSize(new Dimension(256, 144));
        panel1.setPreferredSize(new Dimension(256, 192));
        panel1.setRequestFocusEnabled(true);
        mai = new JPanel();
        mai.setLayout(new GridBagLayout());
        panel1.add(mai, BorderLayout.CENTER);
        logPanel = new JPanel();
        logPanel.setLayout(new GridBagLayout());
        logPanel.setPreferredSize(new Dimension(164, 128));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        mai.add(logPanel, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        logPanel.add(panel2, gbc);
        loginBtn = new JButton();
        loginBtn.setText("登录");
        panel2.add(loginBtn);
        statusLbl = new JLabel();
        statusLbl.setForeground(new Color(-1293776));
        statusLbl.setText("");
        panel2.add(statusLbl);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        logPanel.add(panel3, gbc);
        passwdTextField = new JPasswordField();
        passwdTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        logPanel.add(passwdTextField, gbc);
        passwdLbl = new JLabel();
        Font passwdLblFont = this.$$$getFont$$$(null, -1, 18, passwdLbl.getFont());
        if (passwdLblFont != null) passwdLbl.setFont(passwdLblFont);
        passwdLbl.setText("密　码");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        logPanel.add(passwdLbl, gbc);
        usernameLbl = new JLabel();
        Font usernameLblFont = this.$$$getFont$$$(null, -1, 18, usernameLbl.getFont());
        if (usernameLblFont != null) usernameLbl.setFont(usernameLblFont);
        usernameLbl.setText("用　戶");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        logPanel.add(usernameLbl, gbc);
        userTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        logPanel.add(userTextField, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
